/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardReferrersIndexRouteImport } from './routes/dashboard/referrers/index'
import { Route as DashboardBookingsIndexRouteImport } from './routes/dashboard/bookings/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardReferrersIndexRoute = DashboardReferrersIndexRouteImport.update({
  id: '/referrers/',
  path: '/referrers/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardBookingsIndexRoute = DashboardBookingsIndexRouteImport.update({
  id: '/bookings/',
  path: '/bookings/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/bookings': typeof DashboardBookingsIndexRoute
  '/dashboard/referrers': typeof DashboardReferrersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/bookings': typeof DashboardBookingsIndexRoute
  '/dashboard/referrers': typeof DashboardReferrersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/bookings/': typeof DashboardBookingsIndexRoute
  '/dashboard/referrers/': typeof DashboardReferrersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/dashboard/bookings' | '/dashboard/referrers'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/dashboard/bookings' | '/dashboard/referrers'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/bookings/'
    | '/dashboard/referrers/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/referrers/': {
      id: '/dashboard/referrers/'
      path: '/referrers'
      fullPath: '/dashboard/referrers'
      preLoaderRoute: typeof DashboardReferrersIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/bookings/': {
      id: '/dashboard/bookings/'
      path: '/bookings'
      fullPath: '/dashboard/bookings'
      preLoaderRoute: typeof DashboardBookingsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardBookingsIndexRoute: typeof DashboardBookingsIndexRoute
  DashboardReferrersIndexRoute: typeof DashboardReferrersIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardBookingsIndexRoute: DashboardBookingsIndexRoute,
  DashboardReferrersIndexRoute: DashboardReferrersIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
